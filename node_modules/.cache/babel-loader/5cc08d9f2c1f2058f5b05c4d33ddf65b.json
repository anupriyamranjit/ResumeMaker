{"ast":null,"code":"var _jsxFileName = \"/Users/anupriyamranjit/Desktop/ResumeMaker/resumefrontend/src/component/stepper.js\";\nimport React from 'react';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport Check from '@material-ui/icons/Check';\nimport ClearIcon from '@material-ui/icons/Clear';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { StepConnector } from '@material-ui/core';\nimport clsx from 'clsx';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%'\n  },\n  button: {\n    marginRight: theme.spacing(1)\n  },\n  instructions: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1)\n  }\n}));\nconst Accepted = withStyles({\n  alternativeLabel: {\n    top: 22\n  },\n  active: {\n    '& $line': {\n      backgroundImage: 'linear-gradient( 95deg,#11998e 0%,#11998e 50%,#38ef7d 100%)'\n    }\n  },\n  completed: {\n    '& $line': {\n      backgroundImage: 'linear-gradient( 95deg,#000000 0%,#11998e 50%,#38ef7d 100%)'\n    }\n  },\n  line: {\n    height: 3,\n    border: 0,\n    backgroundColor: '#eaeaf0',\n    borderRadius: 1\n  }\n})(StepConnector);\nconst IconStyleAccepted = makeStyles({\n  root: {\n    color: '#eaeaf0',\n    display: 'flex',\n    height: 22,\n    alignItems: 'center'\n  },\n  active: {\n    color: '#38ef7d'\n  },\n  circle: {\n    width: 10,\n    height: 10,\n    borderRadius: '100%',\n    backgroundColor: 'currentColor'\n  },\n  completed: {\n    color: '#38ef7d',\n    zIndex: 1,\n    fontSize: 18\n  }\n});\n\nfunction StepIconAccept(props) {\n  const classes = IconStyleAccepted();\n  const {\n    active,\n    completed\n  } = props;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: clsx(classes.root, {\n      [classes.active]: active\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 5\n    }\n  }, completed ? /*#__PURE__*/React.createElement(Check, {\n    className: classes.completed,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 20\n    }\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.circle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 62\n    }\n  }));\n}\n\nfunction getSteps(reject) {\n  return ['Experience', 'Award', 'Framework', 'Languages', 'Project'];\n}\n\nfunction getStepContent(step, props, reject) {\n  switch (step) {\n    case 0:\n      return props.one;\n\n    case 1:\n      return props.two;\n\n    case 2:\n      return props.three;\n\n    case 3:\n      return props.four;\n\n    case 4:\n      return props.five;\n\n    default:\n      return 'Unknown step';\n  }\n}\n\nfunction getConnector(step, reject) {\n  switch (step) {\n    default:\n      return /*#__PURE__*/React.createElement(Accepted, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 14\n        }\n      });\n  }\n}\n\nexport default function HorizontalLinearStepper(props) {\n  const classes = useStyles();\n  const [activeStep, setActiveStep] = React.useState(0);\n  const [isRejected, setReject] = React.useState(true);\n  const steps = getSteps(isRejected);\n\n  const getIcon = () => {\n    return StepIconAccept;\n  };\n\n  const handleNext = () => {\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\n  };\n\n  const handleBack = () => {\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\n  };\n\n  const handleReset = () => {\n    setActiveStep(0);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Stepper, {\n    activeStep: activeStep,\n    style: {\n      backgroundColor: \"transparent\"\n    },\n    connector: getConnector(activeStep, isRejected),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }\n  }, steps.map((label, index) => {\n    const stepProps = {};\n    const labelProps = {};\n    return /*#__PURE__*/React.createElement(Step, Object.assign({\n      key: label\n    }, stepProps, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(StepLabel, Object.assign({}, labelProps, {\n      StepIconComponent: getIcon(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 15\n      }\n    }), label));\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }\n  }, activeStep === steps.length ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.instructions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 13\n    }\n  }, \"All steps completed - you're finished\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: handleReset,\n    className: classes.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 13\n    }\n  }, \"Reset\")) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.instructions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 13\n    }\n  }, getStepContent(activeStep, props, isRejected)), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    className: classes.button,\n    onClick: () => setReject(prev => !prev),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 13\n    }\n  }, \" Switch Rejection\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: handleBack,\n    className: classes.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 15\n    }\n  }, \"Back\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: handleNext,\n    className: classes.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 15\n    }\n  }, activeStep === steps.length - 1 ? 'Finish' : 'Next')))));\n}","map":{"version":3,"sources":["/Users/anupriyamranjit/Desktop/ResumeMaker/resumefrontend/src/component/stepper.js"],"names":["React","makeStyles","withStyles","Stepper","Step","Check","ClearIcon","StepLabel","Button","Typography","StepConnector","clsx","useStyles","theme","root","width","button","marginRight","spacing","instructions","marginTop","marginBottom","Accepted","alternativeLabel","top","active","backgroundImage","completed","line","height","border","backgroundColor","borderRadius","IconStyleAccepted","color","display","alignItems","circle","zIndex","fontSize","StepIconAccept","props","classes","getSteps","reject","getStepContent","step","one","two","three","four","five","getConnector","HorizontalLinearStepper","activeStep","setActiveStep","useState","isRejected","setReject","steps","getIcon","handleNext","prevActiveStep","handleBack","handleReset","map","label","index","stepProps","labelProps","length","prev"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport Check from '@material-ui/icons/Check';\nimport ClearIcon from '@material-ui/icons/Clear';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport {StepConnector} from '@material-ui/core';\nimport clsx from 'clsx';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n  },\n  button: {\n    marginRight: theme.spacing(1),\n  },\n  instructions: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n  },\n}));\n\nconst Accepted = withStyles({\n  alternativeLabel: {\n    top: 22,\n  },\n  active: {\n    '& $line': {\n      backgroundImage:\n        'linear-gradient( 95deg,#11998e 0%,#11998e 50%,#38ef7d 100%)',\n    },\n  },\n  completed: {\n    '& $line': {\n      backgroundImage:\n        'linear-gradient( 95deg,#000000 0%,#11998e 50%,#38ef7d 100%)',\n    },\n  },\n  line: {\n    height: 3,\n    border: 0,\n    backgroundColor: '#eaeaf0',\n    borderRadius: 1,\n  },\n})(StepConnector);\n\n\n\n\n\n\nconst IconStyleAccepted = \n\n  makeStyles({\n  root: {\n    color: '#eaeaf0',\n    display: 'flex',\n    height: 22,\n    alignItems: 'center',\n  },\n  active: {\n    color: '#38ef7d',\n  },\n  circle: {\n    width: 10,\n    height: 10,\n    borderRadius: '100%',\n    backgroundColor: 'currentColor',\n  },\n  completed: {\n    color: '#38ef7d',\n    zIndex: 1,\n    fontSize: 18,\n  },\n});\n\n\n\nfunction StepIconAccept(props) {\n    const classes = IconStyleAccepted();\n    const { active, completed } = props;\n\n  return (\n    <div\n      className={clsx(classes.root, {\n        [classes.active]: active,\n      })}\n    >\n      {completed ? <Check className={classes.completed} /> : <div className={classes.circle} />}\n    </div>\n  );\n}\n\n\n\n\n\n\nfunction getSteps(reject) {\n  return ['Experience', 'Award', 'Framework', 'Languages','Project'];\n}\n\nfunction getStepContent(step,props,reject) {\n  switch (step) {\n    case 0:\n      return props.one;\n    case 1:\n      return props.two;\n    case 2:\n      return props.three;\n    case 3:\n      return props.four;\n    case 4:\n      return props.five;\n    default:\n      return 'Unknown step';\n  }\n}\n\nfunction getConnector(step ,reject){\n  switch (step) {\n    default:\n      return <Accepted />;\n  }\n}\n\nexport default function HorizontalLinearStepper(props) {\n  const classes = useStyles();\n  const [activeStep, setActiveStep] = React.useState(0);\n  const [isRejected, setReject] = React.useState(true);\n  const steps = getSteps(isRejected);\n\n  const getIcon = () => {\n\n      return StepIconAccept\n      \n    }\n    \n    \n\n  const handleNext = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\n\n  };\n\n  const handleBack = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\n  };\n\n  const handleReset = () => {\n    setActiveStep(0);\n  };\n\n  return (\n    <div className={classes.root}>\n      <Stepper activeStep={activeStep}  style={{ backgroundColor: \"transparent\" }} connector={getConnector(activeStep ,isRejected)}>\n        {steps.map((label, index) => {\n          const stepProps = {};\n          const labelProps = {};\n          return (\n          \n            <Step key={label} {...stepProps} >\n              <StepLabel {...labelProps} StepIconComponent={getIcon()}>{label}</StepLabel>\n            </Step>\n\n          );\n        }\n        )\n      }\n      </Stepper>\n      <div>\n        {activeStep === steps.length ? (\n          <div>\n            <Typography className={classes.instructions}>\n              All steps completed - you&apos;re finished\n            </Typography>\n            <Button onClick={handleReset} className={classes.button}>\n              Reset\n            </Button>\n          </div>\n        ) : (\n          <div>\n            <Typography className={classes.instructions}>{getStepContent(activeStep,props,isRejected)}</Typography>\n            <div>\n            <Button  variant=\"contained\" color=\"primary\" className={classes.button} onClick={() => setReject(prev => !prev)}> Switch Rejection</Button>\n              <Button variant=\"contained\" color=\"primary\" onClick={handleBack} className={classes.button}>\n              Back\n            </Button>\n\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={handleNext}\n                className={classes.button}\n              >\n                {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\n              </Button>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}